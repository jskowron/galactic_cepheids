#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from numpy import *
import sys

from functions import project, rotate
from os.path import splitext

if len(sys.argv) <= 1:
  print('Provide file generated by the generate_*.py script')
  print('with time stated in the comment and galacticentrici\ndistances, azimuths and peculiar velocities provided.')
  sys.exit()

infile = sys.argv[1]
filename, _ = splitext(sys.argv[1]) # 'spiral_arms_now.out'
filename += '_evolved.out'

def loadfile(filename):
  '''
    Reads file generated by the generate_*.py script
    with: X_start, Y_start, R_start, phi_start, pecu_vel_r, pecu_vel_phi
    and time stated in the comment.
  '''
  try:
    f = open(filename, 'r')
  except IOError:
    print('Error opening file: %s'%filename)
    sys.exit()

  age = -1.0
  data = []
  for line in f:
    if len(line) <= 0: continue
    l = line.strip()
    if len(l) <= 0: continue
    row = l.split()
    if l[0] == '#':
      if len(row) > 2 and row[1] == 'time':
        try:
          age = float(row[2])
          if age < 0.0: raise ValueError('Time should be positive in the past, we do not evolve back from the future')
        except ValueError:
          print('Simulation time should be a positive float, e.g: "# time 100.0" (in Myrs ago).\nIn line: %s'%line)
          sys.exit()
      continue # other comment
    if len(row) >= 6:
      if age < 0.0:
        print('Simulation time should be given in the comment, before any data, as a positive float, e.g: "# time 100.0" (in Myrs ago).')
        sys.exit()
      X_start, Y_start, R_start, phi_start, pecu_vel_r, pecu_vel_phi = (float(x) for x in row[:6])
      data.append([X_start, Y_start, R_start, phi_start, pecu_vel_r, pecu_vel_phi])

  f.close()
  return age, array(data)

simulation_age, data = loadfile(infile)

# ---------------------------------
with open(filename, 'w') as outfile:
    outfile.write('# time %.2f (Myrs ago)\n'%(simulation_age))
    outfile.write('#\n')
    outfile.write('#  X_now     Y_now      R_now   phi_now       X_start   Y_start   R_start phi_start   pecu_vel_r pecu_vel_phi\n')
    outfile.write('#    kpc        kpc       kpc     deg           kpc        kpc       kpc     deg          km/s      km/s\n')
    outfile.write('#\n')
    for X_start, Y_start, R_start, phi_start, pecu_vel_r, pecu_vel_phi in data:
 
      # we simulate position of stars in the future by advancing their positions
      # using rotation curve and pecular velocities of individual stars
      distG, phi = rotate(simulation_age, R_start * 1000.0, phi_start, pecu_vel_r, pecu_vel_phi)
 
      # XY positions evolved to the current time are:
      xG, yG = project(phi, distG)
 
      for row in c_[xG * 0.001, yG * 0.001, distG * 0.001, phi, X_start, Y_start, R_start, phi_start, pecu_vel_r, pecu_vel_phi]:
        outfile.write('%9.4f %9.4f  %9.4f %9.4f    %9.4f %9.4f  %9.4f %9.4f %9.2f %9.2f\n'%tuple(row))

if __name__ == '__main__':
  pass

